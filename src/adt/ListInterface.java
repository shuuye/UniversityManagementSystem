package adt;public interface ListInterface<T> {    public boolean add(T newEntry); //Modified by: Chew Wei Seng    public boolean add(int newPosition, T newEntry); //Modified by: Chew Wei Seng    public T remove(int givenPosition); //Modified by: Chew Wei Seng    public void clear();    public boolean replace(int givenPosition, T newEntry); //Modified by: Wong Chai Yee    public T getEntry(int givenPosition);    public boolean contains(T anEntry);     public int getNumberOfEntries();    public boolean isEmpty();    public boolean isFull();        public ListInterface<T> removeDuplicate(ListInterface<T> anotherList); //Authored by: wong chai yee        public ListInterface createCopyOfList(); //Authored by: Lim Shuye    public ListInterface<T> search(String anEntry); //Authored by: Lim Shuye    public int count(String entry); //Authored by: Lim Shuye        public void arrangeArrayByOrder(); //Authored by: Chew Wei Seng        }